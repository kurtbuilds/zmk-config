#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DFALT 0
#define QWRTY 1
#define PROGR 2
#define LAUNC 3

/*
Docs of behaviors:
https://zmk.dev/docs/behaviors/layers

Source code of behaviors:
https://github.com/zmkfirmware/zmk/tree/fadb50867147c935b912b2afbfebd9734ef00ccb/app/dts/behaviors

Key codes:
https://zmk.dev/docs/codes/
*/

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    1    |    2    |    3    |    4    |    5    |                                          |    6    |    7    |    8    |    9    |    0    |    \    |
// |   TAB   |    Q    |    W    |    P    |    D    |    F    |                                          |    Y    |    U    |    L    |    K    |    ;    |    -    |
// |   ESC   |    A    |    S    |    T    |    R    |    G    |                                          |    H    |    N    |    E    |    I    |    O    |    '    |
// |   DOT   |    Z    |    X    |    C    |    V    |    B    |  LAUNC  |         |  |         |  LAUNC  |    J    |    M    |    ,    |    .    |    /    |    UP   |
// |   DOT   |   CTRL  |   OPT   |         |   GUI   |  SPACE  |   BSPC  |   DOT   |  |   DOT   |  ENTER  |  SHIFT  |  PROGR  |                   |   LEFT  |   DOWN  |  RIGHT  |
            bindings = <
    &kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                               &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp BSLH
    &kp TAB   &kp Q     &kp W     &kp P     &kp D     &kp F                                                &kp J     &kp L     &kp U     &kp Y     &kp SEMI  &kp MINUS
&mt LCTRL ESC &kp A     &kp S     &kp R     &kp T     &kp G                                                &kp H     &kp N     &kp E     &kp I     &kp O     &kp SQT
    &kp LSHFT &lt 2 Z   &kp X     &kp C     &kp V     &kp B     &none                            &none     &kp K     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp UP
    &none     &kp LCTRL &kp LALT            &kp LGUI  &kp SPACE &kp BSPC  &kp DEL      &sl LAUNC &kp ENTER &kp LSHFT &mo_tog 2 2                   &kp LEFT  &kp DOWN  &kp RIGHT
            >;
        };

        qwerty_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    1    |    2    |    3    |    4    |    5    |                                          |    6    |    7    |    8    |    9    |    0    |    \    |
// |   tab   |    q    |    w    |    e    |    r    |    t    |                                          |    y    |    u    |    i    |    o    |    p    |    -    |
// |   ESC   |    A    |    R    |    S    |    T    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |   DOT   |    Z    |    X    |    J    |    C    |    V    |   DOT   |         |  |         |   DOT   |    N    |    M    |    ,    |    .    |    /    |    UP   |
// |   DOT   |   CTRL  |   OPT   |         |   GUI   |  SPACE  |   BSPC  |   DOT   |  |   DOT   |  ENTER  |  SHIFT  |   DOT   |                   |   LEFT  |   DOWN  |  RIGHT  |
            bindings = <
    &trans    &trans    &trans    &trans    &trans    &trans                                               &trans    &trans    &trans    &trans    &trans    &trans
    &trans    &trans    &trans    &kp E     &kp R     &kp T                                                &trans    &trans    &kp I     &kp O     &kp P     &trans
    &trans    &trans    &trans    &kp D     &kp F     &trans                                               &trans    &kp J     &kp K     &kp L     &kp SEMI  &trans
    &trans    &trans    &trans    &trans    &trans    &trans    &trans                           &trans    &kp N     &trans    &trans    &trans    &trans    &trans
    &trans    &trans    &trans              &trans    &trans    &trans    &trans       &trans    &trans    &trans    &trans                        &trans    &trans    &trans
            >;
        };

        programmer_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    !    |    @    |    3    |    4    |    5    |                                          |    ^    |    &    |    *    |    (    |    )    |    \    |
// |    =    |    -    |    >    |    {    |    }    |    \    |                                          |    $    |    7    |    8    |    9    |    ,    |    -    |
// |   ESC   |    *    |    &    |    (    |    )    |    |    |                                          |    +    |    4    |    5    |    6    |    .    |    `    |
// |   DOT   |         |    !    |    [    |    ]    |    @    |   DOT   |         |  |         |   DOT   |         |    1    |    2    |    3    |    /    |    UP   |
// |   DOT   |   CTRL  |   OPT   |         |   GUI   |  SPACE  |   BSPC  |   DOT   |  |   DOT   |    =    |    0    |   L0    |                   |   LEFT  |   DOWN  |  RIGHT  |
            bindings = <
    &trans    &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                                            &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
    &kp EQUAL &kp MINUS &kp GT    &kp LBRC  &kp RBRC  &kp BSLH                                             &kp DLLR  &kp N7    &kp N8    &kp N9    &kp COMMA &trans
    &to DFALT &kp STAR  &kp AMPS  &kp LPAR  &kp RPAR  &kp PIPE                                             &kp PLUS  &kp N4    &kp N5    &kp N6    &kp DOT   &kp GRAVE
    &trans    &trans    &kp EXCL  &kp LBKT  &kp RBKT  &kp AT    &trans                           &trans    &trans    &kp N1    &kp N2    &kp N3    &trans     &trans
    &trans    &trans    &trans              &trans    &trans    &trans    &trans       &trans    &kp EQUAL &kp N0    &trans                        &trans    &trans     &trans
            >;
        };
        launch_layer {

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    1    |    2    |    3    |    4    |    5    |                                          |         |         |         |         |         |         |
// |   TAB   |         |    !    |    {    |    }    |    \    |                                          |         |    7    |    8    |    9    |         |         |
// |   ESC   |         |    &    |    (    |    )    |    |    |                                          |         |    4    |    5    |    6    |         |         |
// |   DOT   |         |    *    |    [    |    ]    |    @    |   DOT   |         |  |         |   DOT   |         |    1    |    2    |    3    |         |    UP   |
// |   DOT   |   CTRL  |   OPT   |         |   GUI   |  SPACE  |   BSPC  |   DOT   |  |   DOT   |  ENTER  |    0    |   ...   |                   |   LEFT  |   DOWN  |  RIGHT  |
            bindings = <
    &none      &none      &none     &none     &none     &ext_power EP_ON                              &ext_power EP_ON &none      &none        &none     &none     &bt BT_CLR
    &none      &none      &none     &none     &none     &ext_power EP_OFF                            &ext_power EP_OFF &kp C_NEXT &kp C_VOL_UP &none     &none     &none
    &to DFALT  &none      &none     &none     &none     &none                                                &none     &kp C_PP   &kp C_MUTE   &none     &none     &none
    &none      &to QWRTY  &none     &none     &none     &none     &none                            &none     &none     &kp C_PREV &kp C_VOL_DN &none     &none     &none
    &trans     &none      &none               &none     &none     &none    &to QWRTY    &trans     &none     &none     &none                             &none     &none   &none
            >;
        };
    };
};

