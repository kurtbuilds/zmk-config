#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define QWRTY 0
#define PROGR 1

/*
Docs of behaviors:
https://zmk.dev/docs/behaviors/layers

Source code of behaviors:
https://github.com/zmkfirmware/zmk/tree/fadb50867147c935b912b2afbfebd9734ef00ccb/app/dts/behaviors

Key codes:
https://zmk.dev/docs/codes/
*/

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    1    |    2    |    3    |    4    |    5    |                                          |    6    |    7    |    8    |    9    |    0    |    \    |
// |   TAB   |    Q    |    W    |    P    |    D    |    F    |                                          |    Y    |    U    |    L    |    K    |    ;    |    -    |
// |   ESC   |    A    |    S    |    T    |    R    |    G    |                                          |    H    |    N    |    E    |    I    |    O    |    '    |
// |  SHIFT  |    Z    |    X    |    C    |    V    |    B    |   none  |         |  |         |  none   |    J    |    M    |    ,    |    .    |    /    |    UP   |
// |   DOT   |   CTRL  |   OPT   |         |   GUI   |  SPACE  |   BSPC  |   none  |  |   none  |  ENTER  |  SHIFT  |  PROGR  |                   |   LEFT  |   DOWN  |  RIGHT  |
            bindings = <
    &kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                               &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp EQUAL
    &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                                                &kp Y     &kp U     &kp I     &kp O     &kp P     &kp MINUS
&mt LCTRL ESC &kp A     &kp S     &kp D     &kp F     &kp G                                                &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
    &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B     &none                            &none     &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp UP
    &none     &kp LCTRL &kp LALT            &kp LGUI  &kp SPACE &kp BSPC  &kp DEL      &sl PROGR &kp ENTER &kp LSHFT &mo PROGR                     &kp LEFT  &kp DOWN  &kp RIGHT
            >;
        };

        programmer_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    !    |    @    |    #    |    $    |    %    |                                          |    ^    |    &    |    *    |    (    |    )    |    +    |
// |   TAB   |    -    |    >    |    {    |    }    |    \    |                                          |    $    |    7    |    8    |    9    |    ,    |    _    |
// |   L0    |    *    |    &    |    (    |    )    |    |    |                                          |    +    |    4    |    5    |    6    |    .    |    `    |
// |  EQUAL  |    z    |    !    |    [    |    ]    |    @    |   none  |         |  |         |   none  |    -    |    1    |    2    |    3    |    /    |    UP   |
// |   none  |   CTRL  |   OPT   |         |   GUI   |  SPACE  |   BSPC  |   DOT   |  |   DOT   |    =    |    0    |   L0    |                   |   LEFT  |   DOWN  |  RIGHT  |
            bindings = <
    &trans    &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                                            &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp PLUS
    &trans    &kp MINUS &kp GT    &kp LBRC  &kp RBRC  &kp BSLH                                             &kp DLLR  &kp N7    &kp N8    &kp N9    &kp COMMA &kp UNDER
    &to QWRTY &kp STAR  &kp AMPS  &kp LPAR  &kp RPAR  &kp PIPE                                             &kp PLUS  &kp N4    &kp N5    &kp N6    &kp DOT   &kp GRAVE
    &kp EQUAL &trans    &kp EXCL  &kp LBKT  &kp RBKT  &kp AT    &trans                           &trans    &kp MINUS &kp N1    &kp N2    &kp N3    &kp FSLH  &trans
    &trans    &trans    &trans              &trans    &trans    &trans    &trans       &trans    &kp EQUAL &kp N0    &trans                        &trans    &trans     &trans
            >;
        };
    };
};

